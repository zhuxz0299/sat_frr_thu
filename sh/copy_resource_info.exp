#!/usr/bin/expect -f

# 设置超时时间
set timeout 120

# 创建一个函数处理VM45到VM47
proc copy_resource_info {vm_name host_dir} {
    global timeout
    
    puts "正在处理虚拟机: $vm_name"
    
    # 在宿主机上创建目标子文件夹
    set vm_subdir "$host_dir/$vm_name"
    spawn bash -c "mkdir -p $vm_subdir"
    expect eof
    
    # 检查虚拟机状态
    spawn sudo virsh domstate $vm_name
    expect {
        "运行中" {
            puts "虚拟机正在运行，正在关闭..."
            spawn sudo virsh shutdown $vm_name
            expect eof
            # 等待虚拟机完全关闭
            set wait_count 0
            set max_wait 30
            while {$wait_count < $max_wait} {
                spawn sudo virsh domstate $vm_name
                expect {
                    "关闭" {
                        break
                    }
                    eof
                }
                incr wait_count
                sleep 2
            }
        }
        "关闭" {
            puts "虚拟机已关闭，继续操作..."
        }
        eof
    }
    
    # 使用virt-copy-out将虚拟机中的resource_info目录复制到宿主机
    puts "复制文件: $vm_name:/home/resource_manager/resource_info/ 到 $vm_subdir"
    spawn sudo virt-copy-out -d $vm_name /home/resource_manager/resource_info/ $vm_subdir
    expect {
        "error:" {
            puts "无法从 $vm_name 复制文件，错误!"
        }
        eof
    }
    
    # 移动文件到正确的位置
    spawn bash -c "if [ -d $vm_subdir/resource_info ]; then mv $vm_subdir/resource_info/* $vm_subdir/ && rmdir $vm_subdir/resource_info; fi"
    expect eof
    
    # 重新启动虚拟机
    spawn sudo virsh start $vm_name
    expect eof
    sleep 5
    
    puts "已成功从 $vm_name 复制 resource_info 文件到 $vm_subdir"
}

# 主脚本开始
# 宿主机上的目标目录
set host_dir "/home/sjtu/sat_frr_thu/resource_info"

# 创建主目标目录（如果不存在）
spawn bash -c "mkdir -p $host_dir"
expect eof

# 遍历vm45到vm47
for {set i 45} {$i <= 47} {incr i} {
    copy_resource_info "vm$i" $host_dir
}

puts "所有虚拟机处理完成"
